# -*- coding: utf-8 -*-
"""VarianceThresholding.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1276cV9cABp5mJp1w7CFmUv24XVTgeF-F
"""

import matplotlib.pyplot as plt
import sklearn.preprocessing as sklp
import sklearn.feature_selection as feat
import pandas as pd

def variance_threshold(df, threshold):
  '''
  Does Variance Thresholding feature selection on data
  Assumes df is not yet normalized and is in the same
  format as ALL_DB_COL_data_100_threshold.csv read into
  pandas dataframe
  Rows are countries and cols are years.
  @param df: A dataframe with Years as columns and indicators as rows
  @param threshold: Variance Threshold for scikitlearn variance thresholding
  @return: Array of unlabeled data with columns as remaining indicators after feature selection
  and rows as years
  '''
  
  #Transpose, Getting Rid of non feature rows, converting to float to make sure
  df = df.drop_duplicates()
  df = df.transpose()
  df = df.drop('Country', 0)
  df = df.drop('Series', 0)
  df = df.drop('COUNT_NAN', 0)
  df = df.drop('COUNT_TOT', 0)
  df = df.drop('COVERAGE_PERCENT', 0)
  df = df.drop('True', 0)
  df = df.astype('float64', errors = 'ignore')

  #normalize from 0 to 1, then variance threshold
  scaler = sklp.MinMaxScaler()
  selector = feat.VarianceThreshold(threshold)

  scaled = scaler.fit_transform(df)
  selected = selector.fit_transform(scaled)
  return selected

def test_var_thresh(file_name, max_thresh):
  '''
  Tests Variance Thresholding feature selection on data
  Assumes file_name is csv in the same
  format as ALL_DB_COL_data_100_threshold.csv
  Plots 'Remaining Indicators vs. Variance Threshold' for each variance threshold from 0 to max_thresh,
  incrementing by 0.01
  @param file_name: Name of csv file in the same format as ALL_DB_COL_data_100_threshold.csv, in this directory
  @param max_thresh: Maximum Tested Variance Threshold for scikitlearn variance thresholding
  @return: null
  '''
  thresh = []
  num_ind = []
  data = pd.read_csv(file_name)
  #find variance threshold results from 0 to max_thresh
  for num in range(int(max_thresh*100)+1):
    result = variance_threshold(data, num/100.0)
    thresh.append(num/100.0)
    num_ind.append(result.shape[1])
  #plot results
  plt.title('Remaining Indicators vs. Variance Threshold')
  plt.xlabel('Variance Threshold')
  plt.ylabel('Number of Remaining Indicators')
  plt.plot(thresh,num_ind)